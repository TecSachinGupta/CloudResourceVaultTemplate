name: Deploy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build package
        run: python -m build
        
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          
  terraform-deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        environment: ['dev', 'test', 'prod']
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      # Deploy to the specific environment based on tag and approval
      - name: Terraform Init
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform init
          
      - name: Terraform Plan
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform plan -out=tfplan
        
      - name: Terraform Apply
        if: |
          (matrix.environment == 'dev') || 
          (matrix.environment == 'test' && github.event.ref == 'refs/tags/v*-rc*') ||
          (matrix.environment == 'prod' && !contains(github.event.ref, '-rc'))
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform apply -auto-approve tfplan